// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package di

import (
	"github.com/mfslog/kratos-ddd/api/rpc"
	"github.com/mfslog/kratos-ddd/app/executor/cmd"
	"github.com/mfslog/kratos-ddd/app/executor/query"
	"github.com/mfslog/kratos-ddd/infra/conf"
	"github.com/mfslog/kratos-ddd/infra/repo/user"
	"github.com/mfslog/kratos-ddd/infra/server/grpc"
)

// Injectors from wire.go:

func InitApp() (*App, func(), error) {
	config, err := conf.NewConf()
	if err != nil {
		return nil, nil, err
	}
	repo, err := user.NewRepo(config)
	if err != nil {
		return nil, nil, err
	}
	appCmd := cmd.NewAppCmd(repo)
	appQuery := query.NewAppQuery(repo)
	handler := rpc.NewHandler(appCmd, appQuery)
	server, err := grpc.New(handler, config)
	if err != nil {
		return nil, nil, err
	}
	app, cleanup, err := NewApp(handler, server, config)
	if err != nil {
		return nil, nil, err
	}
	return app, func() {
		cleanup()
	}, nil
}
