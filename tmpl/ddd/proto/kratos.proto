// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
package kratosddd.service.v1;

// NOTE: 最后请删除这些无用的注释 (゜-゜)つロ

option go_package = "kratos";

option (gogoproto.goproto_getters_all) = false;

service kratos {
  rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc CreateUser(CreateUserReq) returns (CreateUserRsp);
  rpc GetUser(GetUserReq) returns (GetUserRsp);
}

message HelloReq {
  string name = 1 [(gogoproto.moretags) = 'form:"name" validate:"required"'];
}

message HelloRsp {
  string Content = 1 [(gogoproto.jsontag) = 'content'];
}



message User {
  int64   id    = 1;
  string  name  = 2;
  int32   age   = 3;
}


message CreateUserReq {
  User    user  = 1;
}

message CreateUserRsp{
  User    user = 2;
}

message GetUserReq{
 int64  id = 1;
}

message GetUserRsp{
  User   user = 1;
}